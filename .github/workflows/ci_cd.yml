name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 📥 Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 🔑 Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 🐳 Build & push backend
      - name: Build and push backend Docker image
        working-directory: backend
        run: |
          docker build -t hakim2002/backend:${{ github.sha }} .
          docker push hakim2002/backend:${{ github.sha }}

      # 🐳 Build & push frontend
      - name: Build and push frontend Docker image
        working-directory: frontend
        run: |
          docker build -t hakim2002/frontend:${{ github.sha }} .
          docker push hakim2002/frontend:${{ github.sha }}

      # 🔹 Connexion à Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ⚙️ Configurer kubectl pour AKS
      - name: Set up kubectl
        uses: azure/aks-set-context@v3
        with:
          resource-group: myAKSCluster_group
          cluster-name: myAKSCluster

      # 🔐 Secret MySQL (update si existe déjà)
      - name: Handle MySQL Secret
        run: |
          kubectl create secret generic mysql-secret \
            --from-literal=username=root \
            --from-literal=password=${{ secrets.MYSQL_PASSWORD }} \
            -n default \
            --dry-run=client -o yaml | kubectl apply -f -
          echo "✅ Secret MySQL créé ou mis à jour"

      # 🗄️ Déploiement MySQL
      - name: Deploy MySQL
        run: |
          echo "🔧 Déploiement MySQL..."
          kubectl apply -f k8s-manifests/database/ -n default

          echo "⏳ Attente du rollout MySQL..."
          kubectl rollout status deployment/mysql-deployment -n default --timeout=120s || true

          echo "📊 État final MySQL:"
          kubectl get pods -n default -l app=mysql

      # 🚀 Déploiement backend
      - name: Deploy backend to AKS
        run: |
          echo "🔧 Mise à jour de l'image backend..."
          kubectl set image deployment/backend-deployment \
            backend=hakim2002/backend:${{ github.sha }} -n default

          echo "⏳ Attente du rollout backend..."
          kubectl rollout status deployment/backend-deployment -n default --timeout=180s || true

          echo "📊 État final backend:"
          kubectl get pods -n default -l app=backend

      # 🚀 Déployer frontend sur AKS (METHODE KUBECTL SET IMAGE)
      - name: Deploy frontend to AKS
        run: |
          echo "🔧 Mise à jour de l'image frontend..."
          
          # Appliquer le fichier initial (au cas où)
          kubectl apply -f k8s-manifests/frontend/ -n default
          
          # Mettre à jour l'image avec kubectl set image (méthode recommandée)
          kubectl set image deployment/frontend-deployment frontend=hakim2002/frontend:${{ github.sha }} -n default
          
          # Attendre le rollout
          kubectl rollout status deployment/frontend-deployment -n default --timeout=300s

      # 📊 Vérification finale
      - name: Verify deployment
        run: |
          echo "🎯 Déploiements :"
          kubectl get deployments -n default
          echo "🐳 Pods :"
          kubectl get pods -n default -o wide
          echo "🌐 Services :"
          kubectl get svc -n default
